name: obfuscate + deploy to github pages (fast, root-only)

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches: [ main ]

jobs:
  obfuscate-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install small CLIs
        run: |
          # pin to versions that exist and are reliable on GH runners
          npm i -g javascript-obfuscator@4 html-minifier-terser clean-css-cli

      - name: obfuscate top-level .js files (fast)
        run: |
          set -euo pipefail
          # only top-level JS files (no recursion). adjust -maxdepth if you want subfolders later.
          find . -maxdepth 1 -type f -name "*.js" \
            ! -path "./node_modules/*" \
            ! -path "./.github/*" \
            ! -path "./.git/*" | while IFS= read -r f; do
            echo "obfuscating $f (fast mode)"
            tmp="${f}.obf.tmp.js"
            rm -f "$tmp" || true

            # FAST mode: avoid heavy transforms so it finishes quickly on CI
            javascript-obfuscator "$f" \
              --output "$tmp" \
              --compact true \
              --control-flow-flattening false \
              --numbers-to-expressions false \
              --string-array false \
              --disable-console-output true \
              --self-defending false || {
                echo "javascript-obfuscator failed for $f â€” skipping"
                rm -f "$tmp" || true
                continue
              }

            if [ -f "$tmp" ]; then
              mv -f "$tmp" "$f"
              echo "replaced $f with obfuscated version"
            else
              echo "tmp missing $tmp; leaving original $f"
              rm -rf "$tmp" || true
            fi
          done

      - name: minify top-level CSS
        run: |
          find . -maxdepth 1 -type f -name "*.css" | while IFS= read -r f; do
            echo "minifying $f"
            cleancss -o "$f" "$f" || echo "cleancss failed for $f"
          done

      - name: minify top-level HTML
        run: |
          find . -maxdepth 1 -type f -name "*.html" | while IFS= read -r f; do
            echo "minifying $f"
            html-minifier-terser "$f" \
              --collapse-whitespace \
              --remove-comments \
              --remove-redundant-attributes \
              --remove-empty-attributes \
              --minify-js \
              --minify-css \
              -o "$f" || echo "html-minifier failed for $f"
          done

      - name: remove sourcemaps
        run: |
          find . -type f -name "*.map" -print -delete || true

      - name: deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: .
